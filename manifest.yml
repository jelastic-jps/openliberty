type: install
id: openliberty-in-k8s
name: Open Liberty in Kubernetes
baseUrl: https://github.com/jelastic-jps/openliberty/raw/master
logo: /images/open-liberty-logo.png
description: 
  Open Liberty is an open source framework for building fast and efficient cloud-native Java microservices empowered by features from MicroProfile and Jakarta EE. 
homepage: https://openliberty.io/
onBeforeInit: scripts/onbeforeinit.js

settings:
  fields:
    - name: version
      type: list
      caption: Open Liberty Version 
      width: 400

    - name: displayfield
      type: displayfield
      caption: Kubernetes Topology

    - name: topo
      type: radio-fieldset
      values:
          - value: 0-dev
            caption: '<b>Development:</b> one master (1) and one scalable worker (1+)'
          - value: 1-prod
            caption: '<b>Production:</b> multi master (3) with API balancers (2+) and scalable workers (2+)'
      default: 0-dev
      
    - caption: Display Name
      type: string
      name: displayName
      default: Open Liberty in Kubernetes
      required: true
      width: 400

    - caption: Env Name  
      type: envname
      name: envName
      dependsOn: region
      randomName: true
      showFullDomain: true
      required: true

    - caption: Region
      type: regionlist
      name: region
      disableInactive: true
      selectFirstAvailable: true
      width: 200
      filter:
        type: ["vz7"]
        isActive: true
 
onInstall:
  - script: return {result:0, envGroups:eval('(' + MANIFEST + ')').envGroups, ssl:!!jelastic.billing.account.GetQuotas('environment.jelasticssl.enabled').array[0].value}    
  - install: 
      jps: https://github.com/jelastic-jps/kubernetes/blob/v1.18.10/manifest.jps
      envName: ${settings.envName}
      envGroups: ${response.envGroups}
      displayName: ${settings.displayName}
      ssl: ${response.ssl}
      region: ${settings.region}
      settings:
        topo: ${settings.topo}
        deploy: cmd
        cmd: |-
          OPERATOR_NAMESPACE=open-liberty
          kubectl create namespace "$OPERATOR_NAMESPACE"
          kubectl apply -f https://raw.githubusercontent.com/OpenLiberty/open-liberty-operator/master/deploy/releases/${settings.version}/openliberty-app-crd.yaml
          curl -L https://raw.githubusercontent.com/OpenLiberty/open-liberty-operator/master/deploy/releases/${settings.version}/openliberty-app-cluster-rbac.yaml | sed -e "s/OPEN_LIBERTY_OPERATOR_NAMESPACE/${OPERATOR_NAMESPACE}/"  | kubectl apply -f -
          curl -L https://raw.githubusercontent.com/OpenLiberty/open-liberty-operator/master/deploy/releases/${settings.version}/openliberty-app-operator.yaml  | sed -e "s/OPEN_LIBERTY_WATCH_NAMESPACE/${OPERATOR_NAMESPACE}/"  | kubectl apply -n ${OPERATOR_NAMESPACE} -f -
          kubectl apply -f https://raw.githubusercontent.com/jelastic-jps/kubernetes/v1.18.10/addons/open-liberty.yaml
  - script: |
      var resp = jelastic.env.control.GetEnvInfo("${settings.envName}", session);
      return {result:0, startPage: "http" + (resp.env.sslstate ? "s" : "") + "://" + resp.env.domain}      
  - setGlobals:
        startPage: ${response.startPage}  
startPage: ${globals.startPage}
success: |
  Enjoy your Open Liberty at [${globals.startPage}](${globals.startPage}) 
        
